{"ast":null,"code":"var _jsxFileName = \"D:\\\\reCoded\\\\ShoppingListPlannerTogether2\\\\shopping-list\\\\src\\\\components\\\\lists\\\\List.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nconst List = props => {\n  console.log(props.list); // to see match.params.id\n\n  const {\n    list\n  } = props;\n  const id = props.match.params.id;\n\n  if (list) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, props.list.title, \"-\", id), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      onChange: console.log,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"title\",\n      onChange: console.log,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  const id = ownProps.match.params.id;\n  const lists = state.firestore.data.lists;\n  const list = lists ? lists[id] : null;\n  return {\n    list: list,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect(props => [{\n  collection: 'list',\n  doc: props.match.params.id\n}]))(List);","map":{"version":3,"sources":["D:/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/List.js"],"names":["React","connect","firestoreConnect","compose","List","props","console","log","list","id","match","params","title","mapStateToProps","state","ownProps","lists","firestore","data","auth","firebase","collection","doc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB,EADsB,CACG;;AACzB,QAAM;AAAEA,IAAAA;AAAF,MAAWH,KAAjB;AAEA,QAAMI,EAAE,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;;AACA,MAAID,IAAJ,EAAU;AACR,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACG,IAAN,CAAWI,KADd,OACsBH,EADtB,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,QAAQ,EAAEH,OAAO,CAACC,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAED,OAAO,CAACC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALA,CAJF,CADF;AAiBD,GAlBD,MAkBO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF,CA1BD;;AA2BA,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA,QAAMN,EAAE,GAAGM,QAAQ,CAACL,KAAT,CAAeC,MAAf,CAAsBF,EAAjC;AACA,QAAMO,KAAK,GAAGF,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,KAAnC;AACA,QAAMR,IAAI,GAAGQ,KAAK,GAAGA,KAAK,CAACP,EAAD,CAAR,GAAe,IAAjC;AACA,SAAO;AACLD,IAAAA,IAAI,EAAEA,IADD;AAELW,IAAAA,IAAI,EAAEL,KAAK,CAACM,QAAN,CAAeD;AAFhB,GAAP;AAID,CATD;;AAWA,eAAehB,OAAO,CACpBF,OAAO,CAACY,eAAD,CADa,EAEpBX,gBAAgB,CAAEG,KAAD,IAAW,CAAC;AAAEgB,EAAAA,UAAU,EAAE,MAAd;AAAsBC,EAAAA,GAAG,EAAEjB,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF;AAA9C,CAAD,CAAZ,CAFI,CAAP,CAGbL,IAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nconst List = (props) => {\r\n  console.log(props.list); // to see match.params.id\r\n  const { list } = props;\r\n\r\n  const id = props.match.params.id;\r\n  if (list) {\r\n    return (\r\n      <div>\r\n        <span>\r\n          {props.list.title}-{id}\r\n        </span>\r\n        <div>\r\n        <div>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"title\" onChange={console.log} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"name\">Amount</label>\r\n          <input type=\"number\" id=\"title\" onChange={console.log} />\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(ownProps);\r\n  const id = ownProps.match.params.id;\r\n  const lists = state.firestore.data.lists;\r\n  const list = lists ? lists[id] : null;\r\n  return {\r\n    list: list,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect((props) => [{ collection: 'list', doc: props.match.params.id }])\r\n)(List);\r\n"]},"metadata":{},"sourceType":"module"}