{"ast":null,"code":"var _jsxFileName = \"/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/index.js\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; // import './mdbreact/dist/css/mdb-free.css';\n// import './assets/scss/mdb-free.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport listReducer from './store/reducers/listReducer';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ReactReduxFirebaseProvider, firebaseReducer, getFirebase } from 'react-redux-firebase';\nimport authReducer from './store/reducers/authReducer';\nimport { firestoreReducer, getFirestore, reduxFirestore, createFirestoreInstance } from 'redux-firestore';\nimport thunk from 'redux-thunk';\nimport firebaseConfig from './config/firebaseConfig';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  list: listReducer,\n  auth: authReducer,\n  firestore: firestoreReducer // to sync with data base\n\n});\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, firebaseConfig))); //enhancer using  compose\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users',\n  // where profiles are stored in database\n  presence: 'presence',\n  // where list of online users is stored in database\n  sessions: 'sessions'\n};\n\nfunction AuthIsLoaded({\n  children\n}) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }, \"Loading Screen...\");\n  return children;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }\n}, ' ', /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }\n}), ' ', /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }\n}), ' '))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","combineReducers","compose","applyMiddleware","listReducer","Provider","firebase","ReactReduxFirebaseProvider","firebaseReducer","getFirebase","authReducer","firestoreReducer","getFirestore","reduxFirestore","createFirestoreInstance","thunk","firebaseConfig","useSelector","isLoaded","rootReducer","list","auth","firestore","store","withExtraArgument","profileSpecificProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","presence","sessions","AuthIsLoaded","children","state","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\n// import './mdbreact/dist/css/mdb-free.css';\n// import './assets/scss/mdb-free.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, combineReducers, compose, applyMiddleware} from 'redux';\nimport listReducer from './store/reducers/listReducer';\nimport {Provider} from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport {\n  ReactReduxFirebaseProvider,\n  firebaseReducer,\n  getFirebase,\n} from 'react-redux-firebase';\nimport authReducer from './store/reducers/authReducer';\nimport {\n  firestoreReducer,\n  getFirestore,\n  reduxFirestore,\n  createFirestoreInstance,\n} from 'redux-firestore';\nimport thunk from 'redux-thunk';\nimport firebaseConfig from './config/firebaseConfig';\n\nimport {useSelector} from 'react-redux';\nimport {isLoaded} from 'react-redux-firebase';\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  list: listReducer,\n  auth: authReducer,\n  firestore: firestoreReducer, // to sync with data base\n});\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase, firebaseConfig)\n  )\n);\n//enhancer using  compose\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users', // where profiles are stored in database\n  presence: 'presence', // where list of online users is stored in database\n  sessions: 'sessions',\n};\nfunction AuthIsLoaded({children}) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children;\n}\nReactDOM.render(\n  <Provider store={store}>\n    {' '}\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      {' '}\n      <AuthIsLoaded>\n        <App />{' '}\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}