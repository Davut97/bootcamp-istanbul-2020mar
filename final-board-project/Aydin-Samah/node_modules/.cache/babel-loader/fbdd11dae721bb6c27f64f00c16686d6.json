{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport 'firebase/firestore';\nexport const createList = list => {\n  console.log(list);\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // getfirestore from index middleware\n    const fireStore = getFirestore(); //ref to firestore database\n\n    fireStore.collection('lists').add({ ...list\n    }).then(() => {\n      dispatch({\n        type: actionTypes.ADD_LIST,\n        list\n      });\n    }).catch(error => {\n      dispatch({\n        type: 'CREATE_ERROR',\n        error\n      });\n    });\n  };\n};\nexport const addItem = item => {\n  console.log(item);\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    //make async call to database\n    const firestore = getFirestore();\n    firestore.collection(\"utentes\").doc(\"FPAY4Bw5VmJeGVINkQXc\").update({ ...utente,\n      authorFirstName: \"Lar\",\n      authorId: 123,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: \"UPDATE_UTENTE\",\n        item\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"UPDATE_UTENTE_ERROR\",\n        err\n      });\n    });\n    dispatch({\n      type: \"UPDATE_UTENTE\",\n      item: item\n    });\n  };\n};","map":{"version":3,"sources":["D:/reCoded/ShoppingListPlannerTogether2/shopping-list/src/store/actions/listActions.js"],"names":["actionTypes","createList","list","console","log","dispatch","getState","getFirestore","fireStore","collection","add","then","type","ADD_LIST","catch","error","addItem","item","getFirebase","firestore","doc","update","utente","authorFirstName","authorId","createdAt","Date","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAO,oBAAP;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,CAACG,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAC/C;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B,CAF+C,CAEb;;AAClCC,IAAAA,SAAS,CACNC,UADH,CACc,OADd,EAEGC,GAFH,CAEO,EACH,GAAGR;AADA,KAFP,EAKGS,IALH,CAKQ,MAAM;AACVN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEZ,WAAW,CAACa,QAApB;AAA8BX,QAAAA;AAA9B,OAAD,CAAR;AACD,KAPH,EAQGY,KARH,CAQUC,KAAD,IAAW;AAChBV,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,cAAR;AAAwBG,QAAAA;AAAxB,OAAD,CAAR;AACD,KAVH;AAWD,GAdD;AAeD,CAjBM;AAkBP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC/Bd,EAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACA,SAAO,CAACZ,QAAD,EAAWC,QAAX,EAAqB;AAAEY,IAAAA,WAAF;AAAeX,IAAAA;AAAf,GAArB,KAAuD;AAC5D;AAEA,UAAMY,SAAS,GAAGZ,YAAY,EAA9B;AACAY,IAAAA,SAAS,CACNV,UADH,CACc,SADd,EAEGW,GAFH,CAEO,sBAFP,EAGGC,MAHH,CAGU,EACN,GAAGC,MADG;AAENC,MAAAA,eAAe,EAAE,KAFX;AAGNC,MAAAA,QAAQ,EAAE,GAHJ;AAINC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJL,KAHV,EASGf,IATH,CASQ,MAAM;AACVN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,eAAR;AAAyBK,QAAAA;AAAzB,OAAD,CAAR;AACD,KAXH,EAYGH,KAZH,CAYUa,GAAD,IAAS;AACdtB,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,qBAAR;AAA+Be,QAAAA;AAA/B,OAAD,CAAR;AACD,KAdH;AAgBAtB,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,eAAR;AAAyBK,MAAAA,IAAI,EAAEA;AAA/B,KAAD,CAAR;AACD,GArBD;AAsBD,CAxBM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport 'firebase/firestore';\r\nexport const createList = (list) => {\r\n  console.log(list);\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    // getfirestore from index middleware\r\n    const fireStore = getFirestore(); //ref to firestore database\r\n    fireStore\r\n      .collection('lists')\r\n      .add({\r\n        ...list,\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: actionTypes.ADD_LIST, list });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: 'CREATE_ERROR', error });\r\n      });\r\n  };\r\n};\r\nexport const addItem = (item) => {\r\n  console.log(item)\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //make async call to database\r\n\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"utentes\")\r\n      .doc(\"FPAY4Bw5VmJeGVINkQXc\")\r\n      .update({\r\n        ...utente,\r\n        authorFirstName: \"Lar\",\r\n        authorId: 123,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"UPDATE_UTENTE\", item });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"UPDATE_UTENTE_ERROR\", err });\r\n      });\r\n\r\n    dispatch({ type: \"UPDATE_UTENTE\", item: item });\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}