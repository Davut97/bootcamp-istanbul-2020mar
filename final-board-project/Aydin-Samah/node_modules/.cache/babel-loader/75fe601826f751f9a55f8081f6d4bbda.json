{"ast":null,"code":"var _jsxFileName = \"D:\\\\reCoded\\\\ShoppingListPlannerTogether2\\\\shopping-list\\\\src\\\\index.js\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport listReducer from './store/reducers/listReducer';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ReactReduxFirebaseProvider, firebaseReducer, getFirebase } from 'react-redux-firebase';\nimport authReducer from './store/reducers/authReducer';\nimport { firestoreReducer, getFirestore, reduxFirestore, createFirestoreInstance } from 'redux-firestore';\nimport thunk from 'redux-thunk';\nimport firebaseConfig from './config/firebaseConfig';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  list: listReducer,\n  auth: authReducer,\n  firestore: firestoreReducer // to sync with data base\n\n});\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, firebaseConfig))); //enhancer using  compose\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users',\n  // where profiles are stored in database\n  presence: 'presence',\n  // where list of online users is stored in database\n  sessions: 'sessions'\n};\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 4\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["D:/reCoded/ShoppingListPlannerTogether2/shopping-list/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","combineReducers","compose","applyMiddleware","listReducer","Provider","firebase","ReactReduxFirebaseProvider","firebaseReducer","getFirebase","authReducer","firestoreReducer","getFirestore","reduxFirestore","createFirestoreInstance","thunk","firebaseConfig","useSelector","isLoaded","rootReducer","list","auth","firestore","store","withExtraArgument","profileSpecificProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","presence","sessions","render","document","getElementById","unregister"],"mappings":";AAAA,OAAO,+CAAP;AACA,OAAO,0CAAP;AACA,OAAO,2BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,SACCC,0BADD,EAECC,eAFD,EAGCC,WAHD,QAIO,sBAJP;AAKA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SACCC,gBADD,EAECC,YAFD,EAGCC,cAHD,EAICC,uBAJD,QAKO,iBALP;AAMA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,MAAMC,WAAW,GAAGlB,eAAe,CAAC;AACnCK,EAAAA,QAAQ,EAAEE,eADyB;AAEnCY,EAAAA,IAAI,EAAEhB,WAF6B;AAGnCiB,EAAAA,IAAI,EAAEX,WAH6B;AAInCY,EAAAA,SAAS,EAAEX,gBAJwB,CAIN;;AAJM,CAAD,CAAnC;AAOA,MAAMY,KAAK,GAAGvB,WAAW,CACxBmB,WADwB,EAExBjB,OAAO,CACNC,eAAe,CAACY,KAAK,CAACS,iBAAN,CAAwB;AAAEf,EAAAA,WAAF;AAAeG,EAAAA;AAAf,CAAxB,CAAD,CADT,EAENC,cAAc,CAACP,QAAD,EAAWU,cAAX,CAFR,CAFiB,CAAzB,C,CAOA;;AACA,MAAMS,oBAAoB,GAAG;AAC5BC,EAAAA,WAAW,EAAE,OADe;AAE5BC,EAAAA,sBAAsB,EAAE,IAFI;AAG5BC,EAAAA,sBAAsB,EAAE,KAHI;AAI5BC,EAAAA,gBAAgB,EAAE;AAJU,CAA7B;AAMA,MAAMC,QAAQ,GAAG;AAChBxB,EAAAA,QADgB;AAEhByB,EAAAA,MAAM,EAAEf,cAFQ;AAGhBe,EAAAA,MAAM,EAAEN,oBAHQ;AAIhBO,EAAAA,QAAQ,EAAET,KAAK,CAACS,QAJA;AAKhBlB,EAAAA,uBALgB;AAMhBY,EAAAA,WAAW,EAAE,OANG;AAMM;AACtBO,EAAAA,QAAQ,EAAE,UAPM;AAOM;AACtBC,EAAAA,QAAQ,EAAE;AARM,CAAjB;AAUArC,QAAQ,CAACsC,MAAT,eACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,0BAAD,oBAAgCO,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADD,EAMCM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAND,E,CASA;AACA;AACA;;AACAtC,aAAa,CAACuC,UAAd","sourcesContent":["import '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport listReducer from './store/reducers/listReducer';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport {\n\tReactReduxFirebaseProvider,\n\tfirebaseReducer,\n\tgetFirebase,\n} from 'react-redux-firebase';\nimport authReducer from './store/reducers/authReducer';\nimport {\n\tfirestoreReducer,\n\tgetFirestore,\n\treduxFirestore,\n\tcreateFirestoreInstance,\n} from 'redux-firestore';\nimport thunk from 'redux-thunk';\nimport firebaseConfig from './config/firebaseConfig';\n\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\nconst rootReducer = combineReducers({\n\tfirebase: firebaseReducer,\n\tlist: listReducer,\n\tauth: authReducer,\n\tfirestore: firestoreReducer, // to sync with data base\n});\n\nconst store = createStore(\n\trootReducer,\n\tcompose(\n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\t\treduxFirestore(firebase, firebaseConfig)\n\t)\n);\n//enhancer using  compose\nconst profileSpecificProps = {\n\tuserProfile: 'users',\n\tuseFirestoreForProfile: true,\n\tenableRedirectHandling: false,\n\tresetBeforeLogin: false,\n};\nconst rrfProps = {\n\tfirebase,\n\tconfig: firebaseConfig,\n\tconfig: profileSpecificProps,\n\tdispatch: store.dispatch,\n\tcreateFirestoreInstance,\n\tuserProfile: 'users', // where profiles are stored in database\n\tpresence: 'presence', // where list of online users is stored in database\n\tsessions: 'sessions',\n};\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ReactReduxFirebaseProvider {...rrfProps}>\n\t\t\t<App />\n\t\t</ReactReduxFirebaseProvider>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}