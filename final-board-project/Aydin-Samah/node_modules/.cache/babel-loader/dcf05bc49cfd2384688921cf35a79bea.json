{"ast":null,"code":"var _jsxFileName = \"/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js\";\nimport React from 'react';\nimport Lists from './Lists';\nimport { Link, Redirect } from 'react-router-dom';\nimport { createCompletedList, addItemToCompletedLists, deleteDoc } from '../../store/actions/listActions';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from 'mdbreact';\n\nconst AllLists = props => {\n  // console.log(props);\n  const {\n    lists,\n    auth\n  } = props;\n  if (!auth.uid) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  });\n\n  function compare(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = a.title.toUpperCase();\n    const bandB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  const sayHi = e => {\n    console.log(e.target.id);\n    console.log(lists.slice().sort(compare));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBDropdownToggle, {\n    caret: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"MDBDropdown\"), /*#__PURE__*/React.createElement(MDBDropdownMenu, {\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    id: \"TitleAsc\",\n    onClick: sayHi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Something else here\"), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Separated link\"))), lists && lists.map(list => {\n    // console.log(list);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `list/${list.id}`,\n      key: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Lists, {\n      list: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCompletedList: list => dispatch(createCompletedList(list)),\n    addItemToCompletedLists: items => dispatch(addItemToCompletedLists(items)),\n    deleteDoc: items => dispatch(deleteDoc(items))\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(mapStateToProps, mapDispatchToProps))(AllLists);","map":{"version":3,"sources":["/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js"],"names":["React","Lists","Link","Redirect","createCompletedList","addItemToCompletedLists","deleteDoc","firestoreConnect","compose","connect","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","AllLists","props","lists","auth","uid","compare","a","b","bandA","title","toUpperCase","bandB","comparison","sayHi","e","console","log","target","id","slice","sort","map","list","mapDispatchToProps","dispatch","items","mapStateToProps","state","firebase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,SACEC,mBADF,EAEEC,uBAFF,EAGEC,SAHF,QAIO,iCAJP;AAKA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACEC,WADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,UALP;;AAOA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAgBF,KAAtB;AAEA,MAAI,CAACE,IAAI,CAACC,GAAV,EAAe,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AACf,WAASC,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AACrB;AACA,UAAMC,KAAK,GAAGF,CAAC,CAACG,KAAF,CAAQC,WAAR,EAAd;AACA,UAAMC,KAAK,GAAGJ,CAAC,CAACE,KAAF,CAAQC,WAAR,EAAd;AAEA,QAAIE,UAAU,GAAG,CAAjB;;AACA,QAAIJ,KAAK,GAAGG,KAAZ,EAAmB;AACjBC,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEO,IAAIJ,KAAK,GAAGG,KAAZ,EAAmB;AACxBC,MAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,WAAOA,UAAP;AACD;;AACD,QAAMC,KAAK,GAAIC,CAAD,IAAO;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,EAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACiB,KAAN,GAAcC,IAAd,CAAmBf,OAAnB,CAAZ;AACD,GAHD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,MAAxB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,oBAAC,eAAD;AAAiB,IAAA,KAAK,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,EAAE,EAAC,UAApB;AAA+B,IAAA,OAAO,EAAEQ,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,eAME,oBAAC,eAAD;AAAiB,IAAA,OAAO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CAJF,CADF,EAeGX,KAAK,IACJA,KAAK,CAACmB,GAAN,CAAWC,IAAD,IAAU;AAClB;AACA,wBACE,uDACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,QAAOA,IAAI,CAACJ,EAAG,EAA1B;AAA6B,MAAA,GAAG,EAAEI,IAAI,CAACJ,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEI,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD,GATD,CAhBJ,CADF;AA6BD,CAnDD;;AAqDA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlC,IAAAA,mBAAmB,EAAGgC,IAAD,IAAUE,QAAQ,CAAClC,mBAAmB,CAACgC,IAAD,CAApB,CADlC;AAEL/B,IAAAA,uBAAuB,EAAGkC,KAAD,IACvBD,QAAQ,CAACjC,uBAAuB,CAACkC,KAAD,CAAxB,CAHL;AAILjC,IAAAA,SAAS,EAAGiC,KAAD,IAAWD,QAAQ,CAAChC,SAAS,CAACiC,KAAD,CAAV;AAJzB,GAAP;AAMD,CAPD;;AAQA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCZ,EAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,SAAO;AACLxB,IAAAA,IAAI,EAAEwB,KAAK,CAACC,QAAN,CAAezB;AADhB,GAAP;AAGD,CALD;;AAMA,eAAeT,OAAO,CACpBD,gBAAgB,CAAC,MAAM,CAAC,gBAAD,CAAP,CADI,EAEpBE,OAAO,CAAC+B,eAAD,EAAkBH,kBAAlB,CAFa,CAAP,CAGbvB,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Lists from './Lists';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {\r\n  createCompletedList,\r\n  addItemToCompletedLists,\r\n  deleteDoc,\r\n} from '../../store/actions/listActions';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n} from 'mdbreact';\r\n\r\nconst AllLists = (props) => {\r\n  // console.log(props);\r\n  const {lists, auth} = props;\r\n\r\n  if (!auth.uid) return <Redirect to='/signin' />;\r\n  function compare(a, b) {\r\n    // Use toUpperCase() to ignore character casing\r\n    const bandA = a.title.toUpperCase();\r\n    const bandB = b.title.toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (bandA > bandB) {\r\n      comparison = 1;\r\n    } else if (bandA < bandB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n  const sayHi = (e) => {\r\n    console.log(e.target.id);\r\n    console.log(lists.slice().sort(compare));\r\n  };\r\n  return (\r\n    <div>\r\n      <MDBDropdown>\r\n        <MDBDropdownToggle caret color='primary'>\r\n          MDBDropdown\r\n        </MDBDropdownToggle>\r\n        <MDBDropdownMenu basic>\r\n          <MDBDropdownItem id='TitleAsc' onClick={sayHi}>\r\n            Action\r\n          </MDBDropdownItem>\r\n          <MDBDropdownItem>Another Action</MDBDropdownItem>\r\n          <MDBDropdownItem>Something else here</MDBDropdownItem>\r\n          <MDBDropdownItem divider />\r\n          <MDBDropdownItem>Separated link</MDBDropdownItem>\r\n        </MDBDropdownMenu>\r\n      </MDBDropdown>\r\n      {lists &&\r\n        lists.map((list) => {\r\n          // console.log(list);\r\n          return (\r\n            <>\r\n              <Link to={`list/${list.id}`} key={list.id}>\r\n                <Lists list={list} />\r\n              </Link>\r\n            </>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCompletedList: (list) => dispatch(createCompletedList(list)),\r\n    addItemToCompletedLists: (items) =>\r\n      dispatch(addItemToCompletedLists(items)),\r\n    deleteDoc: (items) => dispatch(deleteDoc(items)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default compose(\r\n  firestoreConnect(() => ['CompletedLists']),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(AllLists);\r\n"]},"metadata":{},"sourceType":"module"}