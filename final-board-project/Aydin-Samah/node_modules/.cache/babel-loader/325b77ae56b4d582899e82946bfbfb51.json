{"ast":null,"code":"var _jsxFileName = \"D:\\\\reCoded\\\\ShoppingListPlannerTogether2\\\\shopping-list\\\\src\\\\components\\\\lists\\\\AllLists.js\";\nimport React from 'react';\nimport Lists from './Lists';\nimport { Link } from 'react-router-dom';\nimport { createCompletedList, addItemToCompletedLists } from '../../store/actions/listActions';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nconst AllLists = props => {\n  // console.log(props);\n  const {\n    lists\n  } = props;\n\n  const handleToggleComplete = (listTitle, items, listId) => {\n    console.log(listTitle, items);\n    props.createCompletedList({\n      title: listTitle\n    });\n    items.map(item => {\n      props.addItemToCompletedLists({\n        item: item,\n        listId: listId\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, lists && lists.map(list => {\n    console.log(list);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `list/${list.id}`,\n      key: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Lists, {\n      list: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleToggleComplete(list, list.items, list.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }\n    }, \"click\"));\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCompletedList: list => dispatch(createCompletedList(list)),\n    addItemToCompletedLists: items => dispatch(addItemToCompletedLists(items))\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(null, mapDispatchToProps))(AllLists);","map":{"version":3,"sources":["D:/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js"],"names":["React","Lists","Link","createCompletedList","addItemToCompletedLists","firestoreConnect","compose","connect","AllLists","props","lists","handleToggleComplete","listTitle","items","listId","console","log","title","map","item","list","id","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACCC,mBADD,EAECC,uBAFD,QAGO,iCAHP;AAIA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;;AACA,QAAME,oBAAoB,GAAG,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,MAAnB,KAA8B;AAC1DC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBC,KAAvB;AACAJ,IAAAA,KAAK,CAACN,mBAAN,CAA0B;AAAEc,MAAAA,KAAK,EAAEL;AAAT,KAA1B;AACAC,IAAAA,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACjBV,MAAAA,KAAK,CAACL,uBAAN,CAA8B;AAAEe,QAAAA,IAAI,EAAEA,IAAR;AAAcL,QAAAA,MAAM,EAAEA;AAAtB,OAA9B;AACA,KAFD;AAGA,GAND;;AAOA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,KAAK,IACLA,KAAK,CAACQ,GAAN,CAAUE,IAAI,IAAI;AACjBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,wBACC,uDACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,QAAOA,IAAI,CAACC,EAAG,EAA1B;AAA6B,MAAA,GAAG,EAAED,IAAI,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAED,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,eAIC;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,OAAO,EAAE,MAAMT,oBAAoB,CAACS,IAAD,EAAOA,IAAI,CAACP,KAAZ,EAAmBO,IAAI,CAACC,EAAxB,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJD,CADD;AAaA,GAfD,CAFF,CADD;AAqBA,CA/BD;;AAiCA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNpB,IAAAA,mBAAmB,EAAEiB,IAAI,IAAIG,QAAQ,CAACpB,mBAAmB,CAACiB,IAAD,CAApB,CAD/B;AAENhB,IAAAA,uBAAuB,EAAES,KAAK,IAAIU,QAAQ,CAACnB,uBAAuB,CAACS,KAAD,CAAxB;AAFpC,GAAP;AAIA,CALD;;AAMA,eAAeP,OAAO,CACrBD,gBAAgB,CAAC,MAAM,CAAC,gBAAD,CAAP,CADK,EAErBE,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAFc,CAAP,CAGbd,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Lists from './Lists';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n\tcreateCompletedList,\r\n\taddItemToCompletedLists,\r\n} from '../../store/actions/listActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AllLists = props => {\r\n\t// console.log(props);\r\n\tconst { lists } = props;\r\n\tconst handleToggleComplete = (listTitle, items, listId) => {\r\n\t\tconsole.log(listTitle, items);\r\n\t\tprops.createCompletedList({ title: listTitle });\r\n\t\titems.map(item => {\r\n\t\t\tprops.addItemToCompletedLists({ item: item, listId: listId });\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{lists &&\r\n\t\t\t\tlists.map(list => {\r\n\t\t\t\t\tconsole.log(list);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Link to={`list/${list.id}`} key={list.id}>\r\n\t\t\t\t\t\t\t\t<Lists list={list} />\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tonClick={() => handleToggleComplete(list, list.items, list.id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tclick\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tcreateCompletedList: list => dispatch(createCompletedList(list)),\r\n\t\taddItemToCompletedLists: items => dispatch(addItemToCompletedLists(items)),\r\n\t};\r\n};\r\nexport default compose(\r\n\tfirestoreConnect(() => ['CompletedLists']),\r\n\tconnect(null, mapDispatchToProps)\r\n)(AllLists);\r\n"]},"metadata":{},"sourceType":"module"}