{"ast":null,"code":"var _jsxFileName = \"D:\\\\reCoded\\\\ShoppingListPlannerTogether2\\\\shopping-list\\\\src\\\\components\\\\lists\\\\List.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { addItem } from '../../store/actions/listActions';\n\nconst List = props => {\n  console.log(props.list); // to see match.params.id\n\n  const {\n    list\n  } = props;\n  const id = props.match.params.id;\n  const [name, setName] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const handleChangeAmount = event => {\n    setAmount(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(name, amount, id);\n    props.addItem({\n      name: name,\n      amount: amount,\n      id: id\n    });\n  };\n\n  if (list) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, props.list.title, \"-\", id), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Create list\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      onChange: handleChangeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"amount\",\n      onChange: handleChangeAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Add item\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  console.log(state.firestore.data);\n  const id = ownProps.match.params.id;\n  const lists = state.firestore.data.lists;\n  const list = lists ? lists[id] : null;\n  const items = state.firestore.data[id];\n  console.log(items);\n  return {\n    list: list,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addItem: list => dispatch(addItem(list))\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [{\n  collection: 'list',\n  doc: props.match.params.id\n}]))(List);","map":{"version":3,"sources":["D:/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/List.js"],"names":["React","useState","connect","firestoreConnect","compose","addItem","List","props","console","log","list","id","match","params","name","setName","amount","setAmount","handleChangeName","event","target","value","handleChangeAmount","handleSubmit","preventDefault","title","mapStateToProps","state","ownProps","firestore","data","lists","items","auth","firebase","mapDispatchToProps","dispatch","collection","doc"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { addItem } from '../../store/actions/listActions';\r\n\r\nconst List = (props) => {\r\n  console.log(props.list); // to see match.params.id\r\n  const { list } = props;\r\n  const id = props.match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleChangeAmount = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(name, amount, id);\r\n    props.addItem({ name: name, amount: amount, id: id });\r\n  };\r\n\r\n  if (list) {\r\n    return (\r\n      <div>\r\n        <span>\r\n          {props.list.title}-{id}\r\n        </span>\r\n        <div>\r\n          <form onSubmit={handleSubmit}>\r\n            <h5>Create list</h5>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"text\" id=\"name\" onChange={handleChangeName} />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"number\">Amount</label>\r\n              <input type=\"number\" id=\"amount\" onChange={handleChangeAmount} />\r\n            </div>\r\n\r\n            <div>\r\n              <button>Add item</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(ownProps);\r\n  console.log(state.firestore.data)\r\n  const id = ownProps.match.params.id;\r\n  const lists = state.firestore.data.lists;\r\n  const list = lists ? lists[id] : null;\r\n  const items = state.firestore.data[id]\r\n  console.log(items)\r\n  return {\r\n    list: list,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addItem: (list) => dispatch(addItem(list)),\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect((props) => [{ collection: 'list', doc: props.match.params.id }])\r\n)(List);\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}