{"ast":null,"code":"var _jsxFileName = \"/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js\";\nimport React from 'react';\nimport Lists from './Lists';\nimport { Link, Redirect } from 'react-router-dom';\nimport { createCompletedList, addItemToCompletedLists, deleteDoc } from '../../store/actions/listActions';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nconst AllLists = props => {\n  // console.log(props);\n  const {\n    lists,\n    auth\n  } = props;\n\n  const handleToggleComplete = (list, items) => {\n    const {\n      id,\n      title\n    } = list; // console.log(title, id);\n\n    props.createCompletedList({\n      title: title,\n      listId: id\n    });\n    items && items.forEach(item => {\n      props.addItemToCompletedLists({\n        item: item,\n        listId: id\n      });\n    });\n    props.deleteDoc(id);\n  };\n\n  if (!auth.uid) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, lists && lists.map(list => {\n    // console.log(list);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `list/${list.id}`,\n      key: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Lists, {\n      list: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleToggleComplete(list, list.items),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }\n    }, \"Mark as Completed\"));\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCompletedList: list => dispatch(createCompletedList(list)),\n    addItemToCompletedLists: items => dispatch(addItemToCompletedLists(items)),\n    deleteDoc: items => dispatch(deleteDoc(items))\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(mapStateToProps, mapDispatchToProps))(AllLists);","map":{"version":3,"sources":["/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js"],"names":["React","Lists","Link","Redirect","createCompletedList","addItemToCompletedLists","deleteDoc","firestoreConnect","compose","connect","AllLists","props","lists","auth","handleToggleComplete","list","items","id","title","listId","forEach","item","uid","map","mapDispatchToProps","dispatch","mapStateToProps","state","console","log","firebase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SACCC,mBADD,EAECC,uBAFD,EAGCC,SAHD,QAIO,iCAJP;AAKA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACzB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,KAAxB;;AACA,QAAMG,oBAAoB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7C,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBH,IAAtB,CAD6C,CAE7C;;AACAJ,IAAAA,KAAK,CAACP,mBAAN,CAA0B;AAAEc,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,MAAM,EAAEF;AAAxB,KAA1B;AAEAD,IAAAA,KAAK,IACJA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAI;AACrBV,MAAAA,KAAK,CAACN,uBAAN,CAA8B;AAAEgB,QAAAA,IAAI,EAAEA,IAAR;AAAcF,QAAAA,MAAM,EAAEF;AAAtB,OAA9B;AACA,KAFD,CADD;AAIAN,IAAAA,KAAK,CAACL,SAAN,CAAgBW,EAAhB;AACA,GAVD;;AAWA,MAAI,CAACJ,IAAI,CAACS,GAAV,EAAe,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEf,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEV,KAAK,IACLA,KAAK,CAACW,GAAN,CAAUR,IAAI,IAAI;AACjB;AACA,wBACC,uDACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,QAAOA,IAAI,CAACE,EAAG,EAA1B;AAA6B,MAAA,GAAG,EAAEF,IAAI,CAACE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,eAIC;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,OAAO,EAAE,MAAMD,oBAAoB,CAACC,IAAD,EAAOA,IAAI,CAACC,KAAZ,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJD,CADD;AAaA,GAfD,CAFF,CADD;AAqBA,CArCD;;AAuCA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNrB,IAAAA,mBAAmB,EAAEW,IAAI,IAAIU,QAAQ,CAACrB,mBAAmB,CAACW,IAAD,CAApB,CAD/B;AAENV,IAAAA,uBAAuB,EAAEW,KAAK,IAAIS,QAAQ,CAACpB,uBAAuB,CAACW,KAAD,CAAxB,CAFpC;AAGNV,IAAAA,SAAS,EAAEU,KAAK,IAAIS,QAAQ,CAACnB,SAAS,CAACU,KAAD,CAAV;AAHtB,GAAP;AAKA,CAND;;AAOA,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACNd,IAAAA,IAAI,EAAEc,KAAK,CAACG,QAAN,CAAejB;AADf,GAAP;AAGA,CALD;;AAMA,eAAeL,OAAO,CACrBD,gBAAgB,CAAC,MAAM,CAAC,gBAAD,CAAP,CADK,EAErBE,OAAO,CAACiB,eAAD,EAAkBF,kBAAlB,CAFc,CAAP,CAGbd,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Lists from './Lists';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {\r\n\tcreateCompletedList,\r\n\taddItemToCompletedLists,\r\n\tdeleteDoc,\r\n} from '../../store/actions/listActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AllLists = props => {\r\n\t// console.log(props);\r\n\tconst { lists, auth } = props;\r\n\tconst handleToggleComplete = (list, items) => {\r\n\t\tconst { id, title } = list;\r\n\t\t// console.log(title, id);\r\n\t\tprops.createCompletedList({ title: title, listId: id });\r\n\r\n\t\titems &&\r\n\t\t\titems.forEach(item => {\r\n\t\t\t\tprops.addItemToCompletedLists({ item: item, listId: id });\r\n\t\t\t});\r\n\t\tprops.deleteDoc(id);\r\n\t};\r\n\tif (!auth.uid) return <Redirect to='/signin' />;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{lists &&\r\n\t\t\t\tlists.map(list => {\r\n\t\t\t\t\t// console.log(list);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Link to={`list/${list.id}`} key={list.id}>\r\n\t\t\t\t\t\t\t\t<Lists list={list} />\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tonClick={() => handleToggleComplete(list, list.items)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMark as Completed\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tcreateCompletedList: list => dispatch(createCompletedList(list)),\r\n\t\taddItemToCompletedLists: items => dispatch(addItemToCompletedLists(items)),\r\n\t\tdeleteDoc: items => dispatch(deleteDoc(items)),\r\n\t};\r\n};\r\nconst mapStateToProps = state => {\r\n\tconsole.log(state);\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t};\r\n};\r\nexport default compose(\r\n\tfirestoreConnect(() => ['CompletedLists']),\r\n\tconnect(mapStateToProps, mapDispatchToProps)\r\n)(AllLists);\r\n"]},"metadata":{},"sourceType":"module"}