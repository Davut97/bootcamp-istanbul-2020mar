{"ast":null,"code":"var _jsxFileName = \"D:\\\\reCoded\\\\ShoppingListPlannerTogether2\\\\shopping-list\\\\src\\\\components\\\\lists\\\\CompletedList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport CompletedItem from './CompletedItem';\n\nconst CompletedList = props => {\n  // console.log(props.list); // to see match.params.id\n  const {\n    list,\n    items\n  } = props; // console.log(props);\n\n  const id = props.match.params.id;\n  const [name, setName] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [fetchedItems, setFetchedItems] = useState(items);\n  useEffect(() => {\n    setFetchedItems(items);\n  }, [items]);\n\n  if (list) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, props.list.title, \"-\", id), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, items && items.map(item => /*#__PURE__*/React.createElement(CompletedItem, {\n      key: item.id,\n      item: item,\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }\n    }, \"Loading...\");\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const CompletedLists = state.firestore.data.CompletedLists;\n  const list = CompletedLists ? CompletedLists[id] : null; // console.log(lists, id);\n\n  const items = state.firestore.data.CompletedLists ? state.firestore.data.CompletedLists[id].items : null;\n  console.log(items, list);\n  return {\n    list: list,\n    items: items,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(mapStateToProps))(CompletedList);","map":{"version":3,"sources":["D:/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/CompletedList.js"],"names":["React","useState","useEffect","connect","firestoreConnect","compose","CompletedItem","CompletedList","props","list","items","id","match","params","name","setName","amount","setAmount","fetchedItems","setFetchedItems","title","map","item","mapStateToProps","state","ownProps","CompletedLists","firestore","data","console","log","auth","firebase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC9B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,KAAxB,CAF8B,CAG9B;;AAEA,QAAMG,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAACS,KAAD,CAAhD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACfiB,IAAAA,eAAe,CAACT,KAAD,CAAf;AACA,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAGA,MAAID,IAAJ,EAAU;AACT,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,KAAK,CAACC,IAAN,CAAWW,KADb,OACqBT,EADrB,CADD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,KAAK,IACLA,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACb,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACX,EAAzB;AAA6B,MAAA,IAAI,EAAEW,IAAnC;AAAyC,MAAA,EAAE,EAAEX,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFF,CAJD,CADD;AAaA,GAdD,MAcO;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACA;AACD,CA9BD;;AA+BA,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C;AACA,QAAMd,EAAE,GAAGc,QAAQ,CAACb,KAAT,CAAeC,MAAf,CAAsBF,EAAjC;AACA,QAAMe,cAAc,GAAGF,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,cAA5C;AACA,QAAMjB,IAAI,GAAGiB,cAAc,GAAGA,cAAc,CAACf,EAAD,CAAjB,GAAwB,IAAnD,CAJ4C,CAK5C;;AACA,QAAMD,KAAK,GAAGc,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,cAArB,GACXF,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,cAArB,CAAoCf,EAApC,EAAwCD,KAD7B,GAEX,IAFH;AAGAmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ,EAAmBD,IAAnB;AACA,SAAO;AACNA,IAAAA,IAAI,EAAEA,IADA;AAENC,IAAAA,KAAK,EAAEA,KAFD;AAGNqB,IAAAA,IAAI,EAAEP,KAAK,CAACQ,QAAN,CAAeD;AAHf,GAAP;AAKA,CAfD;;AAiBA,eAAe1B,OAAO,CACrBD,gBAAgB,CAAC,MAAM,CAAC,gBAAD,CAAP,CADK,EAErBD,OAAO,CAACoB,eAAD,CAFc,CAAP,CAGbhB,aAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport CompletedItem from './CompletedItem';\r\nconst CompletedList = props => {\r\n\t// console.log(props.list); // to see match.params.id\r\n\tconst { list, items } = props;\r\n\t// console.log(props);\r\n\r\n\tconst id = props.match.params.id;\r\n\tconst [name, setName] = useState('');\r\n\tconst [amount, setAmount] = useState(0);\r\n\tconst [fetchedItems, setFetchedItems] = useState(items);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFetchedItems(items);\r\n\t}, [items]);\r\n\tif (list) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{props.list.title}-{id}\r\n\t\t\t\t</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{items &&\r\n\t\t\t\t\t\titems.map(item => (\r\n\t\t\t\t\t\t\t<CompletedItem key={item.id} item={item} id={id} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <p>Loading...</p>;\r\n\t}\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n\t// console.log(state);\r\n\tconst id = ownProps.match.params.id;\r\n\tconst CompletedLists = state.firestore.data.CompletedLists;\r\n\tconst list = CompletedLists ? CompletedLists[id] : null;\r\n\t// console.log(lists, id);\r\n\tconst items = state.firestore.data.CompletedLists\r\n\t\t? state.firestore.data.CompletedLists[id].items\r\n\t\t: null;\r\n\tconsole.log(items, list);\r\n\treturn {\r\n\t\tlist: list,\r\n\t\titems: items,\r\n\t\tauth: state.firebase.auth,\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tfirestoreConnect(() => ['CompletedLists']),\r\n\tconnect(mapStateToProps)\r\n)(CompletedList);\r\n"]},"metadata":{},"sourceType":"module"}