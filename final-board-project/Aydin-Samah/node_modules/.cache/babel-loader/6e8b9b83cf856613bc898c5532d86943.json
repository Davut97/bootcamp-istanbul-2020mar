{"ast":null,"code":"var _jsxFileName = \"/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/CompletedList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport CompletedItem from './CompletedItem';\nimport { Redirect } from 'react-router-dom';\nimport { MDBIcon, MDBContainer, MDBInput, MDBListGroupItem, MDBListGroup, MDBBadge, MDBCardTitle } from 'mdbreact';\n\nconst CompletedList = props => {\n  // console.log(props.list); // to see match.params.id\n  const {\n    items,\n    auth\n  } = props; // console.log(props);\n\n  const id = props.match.params.id;\n  const title = props.list ? props.list.title : null;\n\n  if (auth.uid) {\n    return /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBCardTitle, {\n      margin: \"aut0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, title), items && items.map(item => /*#__PURE__*/React.createElement(CompletedItem, {\n      key: item.id,\n      item: item,\n      title: title,\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  const id = ownProps.match.params.id;\n  const CompletedLists = state.firestore.data.CompletedLists;\n  const list = CompletedLists ? CompletedLists[id] : null; // console.log(lists, id);\n\n  const items = state.firestore.data.CompletedLists ? state.firestore.data.CompletedLists[id].items : null; // console.log(items, list);\n\n  return {\n    list: list,\n    items: items,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(mapStateToProps))(CompletedList);","map":{"version":3,"sources":["/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/CompletedList.js"],"names":["React","connect","firestoreConnect","compose","CompletedItem","Redirect","MDBIcon","MDBContainer","MDBInput","MDBListGroupItem","MDBListGroup","MDBBadge","MDBCardTitle","CompletedList","props","items","auth","id","match","params","title","list","uid","map","item","mapStateToProps","state","ownProps","CompletedLists","firestore","data","firebase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SACEC,OADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,gBAJF,EAKEC,YALF,EAMEC,QANF,EAOEC,YAPF,QAQO,UARP;;AASA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAgBF,KAAtB,CAF+B,CAG/B;;AAEA,QAAMG,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAMG,KAAK,GAAGN,KAAK,CAACO,IAAN,GAAaP,KAAK,CAACO,IAAN,CAAWD,KAAxB,GAAgC,IAA9C;;AACA,MAAIJ,IAAI,CAACM,GAAT,EAAc;AACZ,wBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BF,KAA7B,CADF,EAGGL,KAAK,IACJA,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACR,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACP,EAAzB;AAA6B,MAAA,IAAI,EAAEO,IAAnC;AAAyC,MAAA,KAAK,EAAEJ,KAAhD;AAAuD,MAAA,EAAE,EAAEH,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ,CADF;AAUD,GAXD,MAWO;AACL,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CArBD;;AAsBA,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA,QAAMV,EAAE,GAAGU,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBF,EAAjC;AACA,QAAMW,cAAc,GAAGF,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,cAA5C;AACA,QAAMP,IAAI,GAAGO,cAAc,GAAGA,cAAc,CAACX,EAAD,CAAjB,GAAwB,IAAnD,CAJ2C,CAK3C;;AACA,QAAMF,KAAK,GAAGW,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,cAArB,GACVF,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,cAArB,CAAoCX,EAApC,EAAwCF,KAD9B,GAEV,IAFJ,CAN2C,CAS3C;;AACA,SAAO;AACLM,IAAAA,IAAI,EAAEA,IADD;AAELN,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,IAAI,EAAEU,KAAK,CAACK,QAAN,CAAef;AAHhB,GAAP;AAKD,CAfD;;AAiBA,eAAeb,OAAO,CACpBD,gBAAgB,CAAC,MAAM,CAAC,gBAAD,CAAP,CADI,EAEpBD,OAAO,CAACwB,eAAD,CAFa,CAAP,CAGbZ,aAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport CompletedItem from './CompletedItem';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {\r\n  MDBIcon,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBListGroupItem,\r\n  MDBListGroup,\r\n  MDBBadge,\r\n  MDBCardTitle,\r\n} from 'mdbreact';\r\nconst CompletedList = (props) => {\r\n  // console.log(props.list); // to see match.params.id\r\n  const {items, auth} = props;\r\n  // console.log(props);\r\n\r\n  const id = props.match.params.id;\r\n  const title = props.list ? props.list.title : null;\r\n  if (auth.uid) {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBCardTitle margin='aut0'>{title}</MDBCardTitle>\r\n\r\n        {items &&\r\n          items.map((item) => (\r\n            <CompletedItem key={item.id} item={item} title={title} id={id} />\r\n          ))}\r\n      </MDBContainer>\r\n    );\r\n  } else {\r\n    return <Redirect to='/login' />;\r\n  }\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(ownProps);\r\n  const id = ownProps.match.params.id;\r\n  const CompletedLists = state.firestore.data.CompletedLists;\r\n  const list = CompletedLists ? CompletedLists[id] : null;\r\n  // console.log(lists, id);\r\n  const items = state.firestore.data.CompletedLists\r\n    ? state.firestore.data.CompletedLists[id].items\r\n    : null;\r\n  // console.log(items, list);\r\n  return {\r\n    list: list,\r\n    items: items,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(() => ['CompletedLists']),\r\n  connect(mapStateToProps)\r\n)(CompletedList);\r\n"]},"metadata":{},"sourceType":"module"}