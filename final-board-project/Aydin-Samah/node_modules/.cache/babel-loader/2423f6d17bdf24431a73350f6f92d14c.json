{"ast":null,"code":"var _jsxFileName = \"/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/CompletedList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport CompletedItem from './CompletedItem';\nimport { Redirect } from 'react-router-dom';\n\nconst CompletedList = props => {\n  // console.log(props.list); // to see match.params.id\n  const {\n    list,\n    items,\n    auth\n  } = props; // console.log(props);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props.list.title, \"-\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, items && items.map(item => /*#__PURE__*/React.createElement(CompletedItem, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 31\n    }\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  const CompletedLists = state.firestore.data.CompletedLists;\n  const list = CompletedLists ? CompletedLists[id] : null; // console.log(lists, id);\n\n  const items = state.firestore.data.CompletedLists ? state.firestore.data.CompletedLists[id].items : null; // console.log(items, list);\n\n  return {\n    list: list,\n    items: items,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(mapStateToProps))(CompletedList);","map":{"version":3,"sources":["/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/CompletedList.js"],"names":["React","connect","firestoreConnect","compose","CompletedItem","Redirect","CompletedList","props","list","items","auth","title","map","item","id","mapStateToProps","state","ownProps","console","log","CompletedLists","firestore","data","firebase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAsBH,KAA5B,CAF+B,CAG/B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAK,CAACC,IAAN,CAAWG,KAAlB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,IACJA,KAAK,CAACG,GAAN,CAAWC,IAAD,iBAAU,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAzB;AAA6B,IAAA,IAAI,EAAED,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAFJ,CAFF,CADF;AASD,CAdD;;AAeA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,cAAc,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,IAAhB,CAAqBF,cAA5C;AACA,QAAMZ,IAAI,GAAGY,cAAc,GAAGA,cAAc,CAACN,EAAD,CAAjB,GAAwB,IAAnD,CAH2C,CAI3C;;AACA,QAAML,KAAK,GAAGO,KAAK,CAACK,SAAN,CAAgBC,IAAhB,CAAqBF,cAArB,GACVJ,KAAK,CAACK,SAAN,CAAgBC,IAAhB,CAAqBF,cAArB,CAAoCN,EAApC,EAAwCL,KAD9B,GAEV,IAFJ,CAL2C,CAQ3C;;AACA,SAAO;AACLD,IAAAA,IAAI,EAAEA,IADD;AAELC,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,IAAI,EAAEM,KAAK,CAACO,QAAN,CAAeb;AAHhB,GAAP;AAKD,CAdD;;AAgBA,eAAeP,OAAO,CACpBD,gBAAgB,CAAC,MAAM,CAAC,gBAAD,CAAP,CADI,EAEpBD,OAAO,CAACc,eAAD,CAFa,CAAP,CAGbT,aAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport CompletedItem from './CompletedItem';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst CompletedList = (props) => {\r\n  // console.log(props.list); // to see match.params.id\r\n  const {list, items, auth} = props;\r\n  // console.log(props);\r\n\r\n  return (\r\n    <div>\r\n      <span>{props.list.title}-</span>\r\n      <div>\r\n        {items &&\r\n          items.map((item) => <CompletedItem key={item.id} item={item} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(ownProps);\r\n  const CompletedLists = state.firestore.data.CompletedLists;\r\n  const list = CompletedLists ? CompletedLists[id] : null;\r\n  // console.log(lists, id);\r\n  const items = state.firestore.data.CompletedLists\r\n    ? state.firestore.data.CompletedLists[id].items\r\n    : null;\r\n  // console.log(items, list);\r\n  return {\r\n    list: list,\r\n    items: items,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(() => ['CompletedLists']),\r\n  connect(mapStateToProps)\r\n)(CompletedList);\r\n"]},"metadata":{},"sourceType":"module"}