{"ast":null,"code":"var _jsxFileName = \"D:\\\\reCoded\\\\ShoppingListPlannerTogether2\\\\shopping-list\\\\src\\\\components\\\\lists\\\\AllLists.js\";\nimport React from 'react';\nimport Lists from './Lists';\nimport { Link } from 'react-router-dom';\nimport { createCompletedList, addItemToCompletedLists } from '../../store/actions/listActions';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nconst AllLists = props => {\n  // console.log(props);\n  const {\n    lists\n  } = props;\n\n  const handleToggleComplete = (list, items) => {\n    const {\n      id,\n      title\n    } = list; // console.log(title, id);\n\n    props.createCompletedList({\n      title: title,\n      listId: id\n    });\n    items.map(item => {\n      props.addItemToCompletedLists({\n        item: item,\n        listId: id\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, lists && lists.map(list => {\n    // console.log(list);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `list/${list.id}`,\n      key: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Lists, {\n      list: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleToggleComplete(list, list.items),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }\n    }, \"Mark as Compl\"));\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCompletedList: list => dispatch(createCompletedList(list)),\n    addItemToCompletedLists: items => dispatch(addItemToCompletedLists(items))\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(null, mapDispatchToProps))(AllLists);","map":{"version":3,"sources":["D:/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js"],"names":["React","Lists","Link","createCompletedList","addItemToCompletedLists","firestoreConnect","compose","connect","AllLists","props","lists","handleToggleComplete","list","items","id","title","listId","map","item","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACCC,mBADD,EAECC,uBAFD,QAGO,iCAHP;AAIA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;;AACA,QAAME,oBAAoB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7C,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBH,IAAtB,CAD6C,CAE7C;;AACAH,IAAAA,KAAK,CAACN,mBAAN,CAA0B;AAAEY,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,MAAM,EAAEF;AAAxB,KAA1B;AACAD,IAAAA,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACjBT,MAAAA,KAAK,CAACL,uBAAN,CAA8B;AAAEc,QAAAA,IAAI,EAAEA,IAAR;AAAcF,QAAAA,MAAM,EAAEF;AAAtB,OAA9B;AACA,KAFD;AAGA,GAPD;;AAQA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,KAAK,IACLA,KAAK,CAACO,GAAN,CAAUL,IAAI,IAAI;AACjB;AACA,wBACC,uDACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,QAAOA,IAAI,CAACE,EAAG,EAA1B;AAA6B,MAAA,GAAG,EAAEF,IAAI,CAACE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,eAIC;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,OAAO,EAAE,MAAMD,oBAAoB,CAACC,IAAD,EAAOA,IAAI,CAACC,KAAZ,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJD,CADD;AAaA,GAfD,CAFF,CADD;AAqBA,CAhCD;;AAkCA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNjB,IAAAA,mBAAmB,EAAES,IAAI,IAAIQ,QAAQ,CAACjB,mBAAmB,CAACS,IAAD,CAApB,CAD/B;AAENR,IAAAA,uBAAuB,EAAES,KAAK,IAAIO,QAAQ,CAAChB,uBAAuB,CAACS,KAAD,CAAxB;AAFpC,GAAP;AAIA,CALD;;AAMA,eAAeP,OAAO,CACrBD,gBAAgB,CAAC,MAAM,CAAC,gBAAD,CAAP,CADK,EAErBE,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAFc,CAAP,CAGbX,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Lists from './Lists';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n\tcreateCompletedList,\r\n\taddItemToCompletedLists,\r\n} from '../../store/actions/listActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AllLists = props => {\r\n\t// console.log(props);\r\n\tconst { lists } = props;\r\n\tconst handleToggleComplete = (list, items) => {\r\n\t\tconst { id, title } = list;\r\n\t\t// console.log(title, id);\r\n\t\tprops.createCompletedList({ title: title, listId: id });\r\n\t\titems.map(item => {\r\n\t\t\tprops.addItemToCompletedLists({ item: item, listId: id });\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{lists &&\r\n\t\t\t\tlists.map(list => {\r\n\t\t\t\t\t// console.log(list);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Link to={`list/${list.id}`} key={list.id}>\r\n\t\t\t\t\t\t\t\t<Lists list={list} />\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tonClick={() => handleToggleComplete(list, list.items)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMark as Compl\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tcreateCompletedList: list => dispatch(createCompletedList(list)),\r\n\t\taddItemToCompletedLists: items => dispatch(addItemToCompletedLists(items)),\r\n\t};\r\n};\r\nexport default compose(\r\n\tfirestoreConnect(() => ['CompletedLists']),\r\n\tconnect(null, mapDispatchToProps)\r\n)(AllLists);\r\n"]},"metadata":{},"sourceType":"module"}