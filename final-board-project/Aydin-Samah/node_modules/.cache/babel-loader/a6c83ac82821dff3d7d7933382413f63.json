{"ast":null,"code":"var _jsxFileName = \"/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js\";\nimport React from 'react';\nimport Lists from './Lists';\nimport { Link, Redirect } from 'react-router-dom';\nimport { createCompletedList, addItemToCompletedLists, deleteDoc } from '../../store/actions/listActions';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from 'mdbreact';\n\nconst AllLists = props => {\n  // console.log(props);\n  const {\n    lists,\n    auth\n  } = props;\n  if (!auth.uid) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBDropdownToggle, {\n    caret: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"MDBDropdown\"), /*#__PURE__*/React.createElement(MDBDropdownMenu, {\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Something else here\"), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Separated link\"))), lists && lists.map(list => {\n    // console.log(list);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `list/${list.id}`,\n      key: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Lists, {\n      list: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createCompletedList: list => dispatch(createCompletedList(list)),\n    addItemToCompletedLists: items => dispatch(addItemToCompletedLists(items)),\n    deleteDoc: items => dispatch(deleteDoc(items))\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(firestoreConnect(() => ['CompletedLists']), connect(mapStateToProps, mapDispatchToProps))(AllLists);","map":{"version":3,"sources":["/media/aydin/86787318787305E9/reCoded/ShoppingListPlannerTogether2/shopping-list/src/components/lists/AllLists.js"],"names":["React","Lists","Link","Redirect","createCompletedList","addItemToCompletedLists","deleteDoc","firestoreConnect","compose","connect","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","AllLists","props","lists","auth","uid","map","list","id","mapDispatchToProps","dispatch","items","mapStateToProps","state","console","log","firebase"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Lists from './Lists';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {\r\n  createCompletedList,\r\n  addItemToCompletedLists,\r\n  deleteDoc,\r\n} from '../../store/actions/listActions';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n} from 'mdbreact';\r\n\r\nconst AllLists = (props) => {\r\n  // console.log(props);\r\n  const {lists, auth} = props;\r\n\r\n  if (!auth.uid) return <Redirect to='/signin' />;\r\n\r\n  return (\r\n    <div>\r\n      <MDBDropdown>\r\n        <MDBDropdownToggle caret color='primary'>\r\n          MDBDropdown\r\n        </MDBDropdownToggle>\r\n        <MDBDropdownMenu basic>\r\n          <MDBDropdownItem>Action</MDBDropdownItem>\r\n          <MDBDropdownItem>Another Action</MDBDropdownItem>\r\n          <MDBDropdownItem>Something else here</MDBDropdownItem>\r\n          <MDBDropdownItem divider />\r\n          <MDBDropdownItem>Separated link</MDBDropdownItem>\r\n        </MDBDropdownMenu>\r\n      </MDBDropdown>\r\n      {lists &&\r\n        lists.map((list) => {\r\n          // console.log(list);\r\n          return (\r\n            <>\r\n              <Link to={`list/${list.id}`} key={list.id}>\r\n                <Lists list={list} />\r\n              </Link>\r\n            </>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCompletedList: (list) => dispatch(createCompletedList(list)),\r\n    addItemToCompletedLists: (items) =>\r\n      dispatch(addItemToCompletedLists(items)),\r\n    deleteDoc: (items) => dispatch(deleteDoc(items)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default compose(\r\n  firestoreConnect(() => ['CompletedLists']),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(AllLists);\r\n"]},"metadata":{},"sourceType":"module"}